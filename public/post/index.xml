<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 丸子有记</title>
    <link>https://wnote.com/post/</link>
    <description>Recent content in Posts on 丸子有记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 11 Sep 2021 17:22:42 +0800</lastBuildDate>
    
	<atom:link href="https://wnote.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>制定kubernetes集群备份策略</title>
      <link>https://wnote.com/post/kubernetes-velero-etcd-backup/</link>
      <pubDate>Sat, 11 Sep 2021 17:22:42 +0800</pubDate>
      
      <guid>https://wnote.com/post/kubernetes-velero-etcd-backup/</guid>
      <description>对于备份，每家互联网公司技术人员都要去做的一件事儿，当然我们也不例外，今天我主要针对生产环境kubernetes集群制定一些自己的策略，这里</description>
    </item>
    
    <item>
      <title>如何快速搭建一套Greenplum集群</title>
      <link>https://wnote.com/post/greenplum-docker-compose-installtion/</link>
      <pubDate>Wed, 08 Sep 2021 17:22:42 +0800</pubDate>
      
      <guid>https://wnote.com/post/greenplum-docker-compose-installtion/</guid>
      <description>最近内部项目支持大数据项目，需要模拟客户场景配置Greenplum(老版本4.2.2.4)，因此这里记录下greenplum集群搭建过程,其</description>
    </item>
    
    <item>
      <title>阿里云共享GPU方案测试</title>
      <link>https://wnote.com/post/kubernetes-gpushare-aliyun/</link>
      <pubDate>Tue, 31 Aug 2021 14:22:42 +0800</pubDate>
      
      <guid>https://wnote.com/post/kubernetes-gpushare-aliyun/</guid>
      <description>一、k8s部署GPU共享插件 部署之前需要确保k8s节点上已安装nvidia-driver和nvidia-docker，同时已将docker默</description>
    </item>
    
    <item>
      <title>kubeadm部署高可用kubernetes集群</title>
      <link>https://wnote.com/post/kubernetes-kubeadm-haproxy-keepalived-deploy/</link>
      <pubDate>Sun, 15 Aug 2021 17:22:42 +0800</pubDate>
      
      <guid>https://wnote.com/post/kubernetes-kubeadm-haproxy-keepalived-deploy/</guid>
      <description>为了后便后期验证私有化部署 ，最近内网环境需要快速搭建一套k8s集群，由于之前对于规模比较大的集群，我一般采用kubeasz和kubespra</description>
    </item>
    
    <item>
      <title>阿里云PrivateZone&#43;Bind9&#43;Dnsmasq实现内部DNS</title>
      <link>https://wnote.com/post/linux-dns-privatezone-bind9-dnsmasq/</link>
      <pubDate>Sat, 10 Jul 2021 17:22:42 +0800</pubDate>
      
      <guid>https://wnote.com/post/linux-dns-privatezone-bind9-dnsmasq/</guid>
      <description>需求： 阿里云集群能够解析内部域名 办公网解析内部域名+办公网上网解析 解决方法： 对于第一个问题，直接使用阿里云PrivateZone解析即可 对于</description>
    </item>
    
    <item>
      <title>Argo Events入门实践</title>
      <link>https://wnote.com/post/cicd-argo-events-automate-task/</link>
      <pubDate>Wed, 07 Jul 2021 16:22:42 +0800</pubDate>
      
      <guid>https://wnote.com/post/cicd-argo-events-automate-task/</guid>
      <description>前面我们介绍了Argo Workflow如何安装与触发任务，这一篇主要介绍一个新工具： ArgoEvents是什么？ Argo Events是一个事件驱动</description>
    </item>
    
    <item>
      <title>Argo Worflow实践一安装部署</title>
      <link>https://wnote.com/post/cicd-argo-workflow-install-in-k8s/</link>
      <pubDate>Fri, 07 May 2021 16:22:42 +0800</pubDate>
      
      <guid>https://wnote.com/post/cicd-argo-workflow-install-in-k8s/</guid>
      <description>简介&amp;amp;架构 Argo Workflows是一个开源容器级别工作流引擎，用于在Kubernetes上协调并行作业。 Argo Workflows通过抽象K</description>
    </item>
    
    <item>
      <title>Gitlab runner配置ceph s3</title>
      <link>https://wnote.com/post/cicd-gitlab-runner-ceph-s3/</link>
      <pubDate>Fri, 26 Mar 2021 17:22:42 +0800</pubDate>
      
      <guid>https://wnote.com/post/cicd-gitlab-runner-ceph-s3/</guid>
      <description>对于前端项目Npm构建的时候，经常拉取前端库耗时比较长，另外不同的job之间复用也是一个问题，无论是artifacts或者cache最终我们</description>
    </item>
    
    <item>
      <title>terraform自动化创建ECS</title>
      <link>https://wnote.com/post/devops-terraform-create-aliyun-ecs/</link>
      <pubDate>Fri, 26 Feb 2021 17:22:42 +0800</pubDate>
      
      <guid>https://wnote.com/post/devops-terraform-create-aliyun-ecs/</guid>
      <description>快速创建一台阿里云ECS主机 指定terraform版本 这里我们指定了阿里云provider版本信息，并设置了terraform的版本要求 # mkdir</description>
    </item>
    
    <item>
      <title>terraform安装与命令详解</title>
      <link>https://wnote.com/post/devops-terraform-command-detail/</link>
      <pubDate>Thu, 25 Feb 2021 17:22:42 +0800</pubDate>
      
      <guid>https://wnote.com/post/devops-terraform-command-detail/</guid>
      <description>安装Terraform Mac系统安装 brew tap hashicorp/tap brew install hashicorp/tap/terraform Linux系统安装 ubuntu安装 curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add - sudo apt-add-repository &amp;quot;deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main&amp;quot; sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install terraform cento</description>
    </item>
    
    <item>
      <title>自动化编排工具Terraform介绍</title>
      <link>https://wnote.com/post/devops-terraform-about/</link>
      <pubDate>Wed, 24 Feb 2021 17:22:42 +0800</pubDate>
      
      <guid>https://wnote.com/post/devops-terraform-about/</guid>
      <description>Terraform是什么？： Terraform是由HashiCorp公司在2014年左右推出的开源资源编排工具, 目前几乎所有的主流云服务商都</description>
    </item>
    
    <item>
      <title>ArgoCD配合Jenkins Pipeline自动化部署应用</title>
      <link>https://wnote.com/post/cicd-argocd-jenkins-pipeline/</link>
      <pubDate>Wed, 29 Jul 2020 15:22:42 +0800</pubDate>
      
      <guid>https://wnote.com/post/cicd-argocd-jenkins-pipeline/</guid>
      <description>创建helm仓库 首先，创建基础Helm模版仓库： helm create template . 对于实际的部署中，需要根据自己的业务定制自己的helm模版，我这里直接使用我们内部自</description>
    </item>
    
    <item>
      <title>argocd部署deployment出现: no space left on device</title>
      <link>https://wnote.com/post/kubernetes-error-no-space-left-on-device/</link>
      <pubDate>Mon, 18 May 2020 10:22:42 +0800</pubDate>
      
      <guid>https://wnote.com/post/kubernetes-error-no-space-left-on-device/</guid>
      <description>故障现象 上午通过argocd部署几个业务应用，部署了2个以后，第三方死活部署不成功，相同的配置，知识集群不一样，怎么会出现这样的问题呢？ 于是</description>
    </item>
    
    <item>
      <title>ArgoCD添加多集群</title>
      <link>https://wnote.com/post/cicd-argocd-add-clusters/</link>
      <pubDate>Tue, 05 May 2020 15:22:42 +0800</pubDate>
      
      <guid>https://wnote.com/post/cicd-argocd-add-clusters/</guid>
      <description>生成argocd管理用户token 登陆dashboard，settings&amp;ndash;&amp;gt;Accounts&amp;ndash;&amp;gt;adm</description>
    </item>
    
    <item>
      <title>ArgoCD安部部署</title>
      <link>https://wnote.com/post/cicd-argocd-install-in-k8s/</link>
      <pubDate>Fri, 01 May 2020 15:22:42 +0800</pubDate>
      
      <guid>https://wnote.com/post/cicd-argocd-install-in-k8s/</guid>
      <description>安装部署 ArgoCD的部署非常简单，安装官方的部署方法(HA模式： kubectl create namespace argocd kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/v1.5.2/manifests/ha/install.yaml 可以按照需求调整部署文件，待pod顺利启动后 # kubectl -n argocd get</description>
    </item>
    
    <item>
      <title>Hugo&#43;Github搭建个人博客</title>
      <link>https://wnote.com/post/tools-hugo-github-blog/</link>
      <pubDate>Tue, 10 Mar 2020 16:22:42 +0800</pubDate>
      
      <guid>https://wnote.com/post/tools-hugo-github-blog/</guid>
      <description>Hugo介绍 之前博客一直使用hexo搭建,随着用golang越来越多，一直想把博客也迁移到hugo,hugo就不用多说了go语言编写的静态网</description>
    </item>
    
    <item>
      <title>kubernetes集群添加用户</title>
      <link>https://wnote.com/post/kubernetes-add-user/</link>
      <pubDate>Tue, 31 Dec 2019 10:22:42 +0800</pubDate>
      
      <guid>https://wnote.com/post/kubernetes-add-user/</guid>
      <description>之前通过ansible搭建了kubernetes集群环境,这里需求主要是添加一个用户进行日常管理，并限制到指定的namespace，接下来进</description>
    </item>
    
    <item>
      <title>kubernetes集群部署traefik2.1</title>
      <link>https://wnote.com/post/kubernetes-traefik-v2.1-deploy/</link>
      <pubDate>Tue, 17 Dec 2019 10:22:42 +0800</pubDate>
      
      <guid>https://wnote.com/post/kubernetes-traefik-v2.1-deploy/</guid>
      <description>架构&amp;amp;概念 Traefik2.x版本相比1.7.x架构有很大变化，正如上边这张架构图，最主要的功能是支持了TCP协议、增加了Route</description>
    </item>
    
    <item>
      <title>kubeasz部署k8s集群</title>
      <link>https://wnote.com/post/kubernetes-kubeasz-deploy-automation/</link>
      <pubDate>Thu, 12 Dec 2019 10:22:42 +0800</pubDate>
      
      <guid>https://wnote.com/post/kubernetes-kubeasz-deploy-automation/</guid>
      <description>环境准备 Master节点 172.16.244.14 172.16.244.16 172.16.244.18 Node节点 172.16.244.25 172.16.244.27 Master节点VIP地址: 172.16.243.13 部署工具:Ansible/kubeasz 初始化环境 安装Ansib</description>
    </item>
    
    <item>
      <title>基于K8S部署gitlab-runner</title>
      <link>https://wnote.com/post/cicd-gitlab-k8s-gitlabrunner/</link>
      <pubDate>Thu, 14 Nov 2019 17:22:42 +0800</pubDate>
      
      <guid>https://wnote.com/post/cicd-gitlab-k8s-gitlabrunner/</guid>
      <description>部署gitlab-runner 这里基于helm部署，参考：https://gitlab.com/gitlab-org/charts/gitl</description>
    </item>
    
  </channel>
</rss>